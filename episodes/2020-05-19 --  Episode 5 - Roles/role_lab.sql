//=============================================================================
// Create databases and users
//=============================================================================
// Create a database for each film
USE ROLE SYSADMIN;
CREATE DATABASE DJANGO_UNCHAINED;
CREATE DATABASE WOLF_OF_WALLSTREET;

// Create Directors
USE ROLE SECURITYADMIN;
CREATE USER QUENTIN_TARANTINO;
CREATE USER MARTIN_SCORSESE;

// Create actors
USE ROLE SECURITYADMIN;
CREATE USER JAMIE_FOXX;
CREATE USER KERRY_WASHINGTON;
CREATE USER CHRISTOPH_WALTZ;
CREATE USER SAMUEL_L_JACKSON;
CREATE USER LEONARDO_DICAPRIO;
CREATE USER JONAH_HILL;
CREATE USER MARGOT_ROBBIE;
CREATE USER MATTHEW_MCCONAUGHEY;
//=============================================================================


//=============================================================================
// Create roles
//=============================================================================
// Create roles
USE ROLE SECURITYADMIN;
CREATE ROLE DJANGO_UNCHAINED_ACTOR;
CREATE ROLE DJANGO_UNCHAINED_DIRECTOR;
CREATE ROLE DJANGO_UNCHAINED_READ;
CREATE ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
CREATE ROLE WOLF_OF_WALLSTREET_ACTOR;
CREATE ROLE WOLF_OF_WALLSTREET_DIRECTOR;
CREATE ROLE WOLF_OF_WALLSTREET_READ;
CREATE ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;

// grant roles to SYSADMIN (always do this)
GRANT ROLE DJANGO_UNCHAINED_ACTOR            TO ROLE SYSADMIN;
GRANT ROLE DJANGO_UNCHAINED_DIRECTOR         TO ROLE SYSADMIN;
GRANT ROLE DJANGO_UNCHAINED_READ             TO ROLE SYSADMIN;
GRANT ROLE DJANGO_UNCHAINED_READ_AND_WRITE   TO ROLE SYSADMIN;
GRANT ROLE WOLF_OF_WALLSTREET_ACTOR          TO ROLE SYSADMIN;
GRANT ROLE WOLF_OF_WALLSTREET_DIRECTOR       TO ROLE SYSADMIN;
GRANT ROLE WOLF_OF_WALLSTREET_READ           TO ROLE SYSADMIN;
GRANT ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE TO ROLE SYSADMIN;

// build role hierarchy
GRANT ROLE DJANGO_UNCHAINED_READ             TO ROLE DJANGO_UNCHAINED_ACTOR;
GRANT ROLE DJANGO_UNCHAINED_READ_AND_WRITE   TO ROLE DJANGO_UNCHAINED_DIRECTOR;
GRANT ROLE DJANGO_UNCHAINED_READ             TO ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
GRANT ROLE WOLF_OF_WALLSTREET_READ           TO ROLE WOLF_OF_WALLSTREET_ACTOR;
GRANT ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE TO ROLE WOLF_OF_WALLSTREET_DIRECTOR;
GRANT ROLE WOLF_OF_WALLSTREET_READ           TO ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;
//=============================================================================


//=============================================================================
// Grant permissions to roles
//=============================================================================
// Create roles
USE ROLE SECURITYADMIN;

// Django Unchained permissions
GRANT USAGE ON DATABASE DJANGO_UNCHAINED                                       TO ROLE DJANGO_UNCHAINED_READ;
GRANT USAGE ON ALL SCHEMAS IN DATABASE DJANGO_UNCHAINED                        TO ROLE DJANGO_UNCHAINED_READ;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE DJANGO_UNCHAINED                     TO ROLE DJANGO_UNCHAINED_READ;
GRANT SELECT ON FUTURE TABLES IN DATABASE DJANGO_UNCHAINED                     TO ROLE DJANGO_UNCHAINED_READ;
GRANT SELECT ON FUTURE VIEWS IN DATABASE DJANGO_UNCHAINED                      TO ROLE DJANGO_UNCHAINED_READ;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN DATABASE DJANGO_UNCHAINED         TO ROLE DJANGO_UNCHAINED_READ;
GRANT ALL PRIVILEGES ON FUTURE TABLES IN DATABASE DJANGO_UNCHAINED             TO ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
GRANT ALL PRIVILEGES ON FUTURE VIEWS IN DATABASE DJANGO_UNCHAINED              TO ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
GRANT ALL PRIVILEGES ON FUTURE MATERIALIZED VIEWS IN DATABASE DJANGO_UNCHAINED TO ROLE DJANGO_UNCHAINED_READ_AND_WRITE;

// Wolf of Wallstreet permissions
GRANT USAGE ON DATABASE WOLF_OF_WALLSTREET                                       TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT USAGE ON ALL SCHEMAS IN DATABASE WOLF_OF_WALLSTREET                        TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE WOLF_OF_WALLSTREET                     TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT SELECT ON FUTURE TABLES IN DATABASE WOLF_OF_WALLSTREET                     TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT SELECT ON FUTURE VIEWS IN DATABASE WOLF_OF_WALLSTREET                      TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN DATABASE WOLF_OF_WALLSTREET         TO ROLE WOLF_OF_WALLSTREET_READ;
GRANT ALL PRIVILEGES ON FUTURE TABLES IN DATABASE WOLF_OF_WALLSTREET             TO ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;
GRANT ALL PRIVILEGES ON FUTURE VIEWS IN DATABASE WOLF_OF_WALLSTREET              TO ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;
GRANT ALL PRIVILEGES ON FUTURE MATERIALIZED VIEWS IN DATABASE WOLF_OF_WALLSTREET TO ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;
//=============================================================================


//=============================================================================
// Grant roles to users
//=============================================================================
USE ROLE SECURITYADMIN;

// Directors
GRANT ROLE DJANGO_UNCHAINED_DIRECTOR   TO USER QUENTIN_TARANTINO;
GRANT ROLE WOLF_OF_WALLSTREET_DIRECTOR TO USER MARTIN_SCORSESE;

// Actors
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER JAMIE_FOXX;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER KERRY_WASHINGTON;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER CHRISTOPH_WALTZ;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER SAMUEL_L_JACKSON;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER LEONARDO_DICAPRIO;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER JONAH_HILL;
GRANT ROLE DJANGO_UNCHAINED_ACTOR TO USER QUENTIN_TARANTINO;

GRANT ROLE WOLF_OF_WALLSTREET_ACTOR TO USER LEONARDO_DICAPRIO;
GRANT ROLE WOLF_OF_WALLSTREET_ACTOR TO USER JONAH_HILL;
GRANT ROLE WOLF_OF_WALLSTREET_ACTOR TO USER MARGOT_ROBBIE;
GRANT ROLE WOLF_OF_WALLSTREET_ACTOR TO USER MATTHEW_MCCONAUGHEY;
//=============================================================================


//=============================================================================
// Explore roles manually
//=============================================================================
USE ROLE SECURITYADMIN;

// Investigate access granted to a user
SHOW USERS;
SHOW GRANTS TO USER LEONARDO_DICAPRIO;
SHOW GRANTS TO ROLE DJANGO_UNCHAINED_ACTOR;
SHOW GRANTS TO ROLE DJANGO_UNCHAINED_READ;
SHOW GRANTS TO ROLE WOLF_OF_WALLSTREET_ACTOR;
SHOW GRANTS TO ROLE WOLF_OF_WALLSTREET_READ;

// Investigate users that have object access
SHOW SCHEMAS IN DATABASE DJANGO_UNCHAINED;
SHOW GRANTS ON SCHEMA DJANGO_UNCHAINED.PUBLIC;
SHOW GRANTS OF ROLE DJANGO_UNCHAINED_READ;
SHOW GRANTS OF ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
SHOW GRANTS OF ROLE DJANGO_UNCHAINED_ACTOR;
SHOW GRANTS OF ROLE DJANGO_UNCHAINED_DIRECTOR;
//=============================================================================


//=============================================================================
// Explore roles visually - snowflakeinspector.com
//=============================================================================
USE ROLE ACCOUNTADMIN;
USE WAREHOUSE DEMO_WH; // select your own warehouse

WITH 
ROLE_GRANTS AS (
  SELECT
    PRIVILEGE,
    GRANTED_ON    AS GRANTED_ON_TYPE,
    TABLE_CATALOG AS GRANTED_ON_DATABASE,
    TABLE_SCHEMA  AS GRANTED_ON_SCHEMA,
    NAME          AS GRANTED_ON_NAME,
    GRANTED_TO    AS GRANTED_TO_TYPE,
    GRANTEE_NAME  AS GRANTED_TO_NAME
  FROM
    SNOWFLAKE.ACCOUNT_USAGE.GRANTS_TO_ROLES
  WHERE
    DELETED_ON IS NULL
    AND
    PRIVILEGE != 'OWNERSHIP'
    AND
    GRANTED_ON_TYPE = 'ROLE'
),

USER_GRANTS AS (
  SELECT
  'USAGE'      AS PRIVILEGE,
  'ROLE'       AS GRANTED_ON_TYPE,
  NULL         AS GRANTED_ON_DATABASE,
  NULL         AS GRANTED_ON_SCHEMA,
  ROLE         AS GRANTED_ON_NAME,
  GRANTED_TO   AS GRANTED_TO_TYPE,
  GRANTEE_NAME AS GRANTED_TO_NAME
  FROM
    SNOWFLAKE.ACCOUNT_USAGE.GRANTS_TO_USERS
  WHERE
    DELETED_ON IS NULL
    AND
    GRANTED_TO_NAME NOT IN ('RANDYPITCHER', 'JOHNAVEN', 'RMAKKENA_SFC', 'ASDF', 'PGANCZ_SFC')
),

GRANTS AS (
  SELECT * FROM ROLE_GRANTS 
  UNION ALL 
  SELECT * FROM USER_GRANTS
),

GRANTS_JSON AS (
  SELECT
    OBJECT_CONSTRUCT(*) AS GRANT_OBJ
  FROM
    GRANTS
),

GRANTS_JSON_ARR AS (
  SELECT
    ARRAY_AGG(*) AS GRANTS
  FROM
    GRANTS_JSON
)

SELECT * FROM GRANTS_JSON_ARR;
//=============================================================================


//=============================================================================
// Cleanup
//=============================================================================
// Cleanup databases
USE ROLE SYSADMIN;
DROP DATABASE DJANGO_UNCHAINED;
DROP DATABASE WOLF_OF_WALLSTREET;

// Cleanup users
USE ROLE SECURITYADMIN;
DROP USER QUENTIN_TARANTINO;
DROP USER MARTIN_SCORSESE;
DROP USER JAMIE_FOXX;
DROP USER KERRY_WASHINGTON;
DROP USER CHRISTOPH_WALTZ;
DROP USER SAMUEL_L_JACKSON;
DROP USER LEONARDO_DICAPRIO;
DROP USER JONAH_HILL;
DROP USER MARGOT_ROBBIE;
DROP USER MATTHEW_MCCONAUGHEY;

// Cleanup roles
USE ROLE SECURITYADMIN;
DROP ROLE DJANGO_UNCHAINED_ACTOR;
DROP ROLE DJANGO_UNCHAINED_DIRECTOR;
DROP ROLE DJANGO_UNCHAINED_READ;
DROP ROLE DJANGO_UNCHAINED_READ_AND_WRITE;
DROP ROLE WOLF_OF_WALLSTREET_ACTOR;
DROP ROLE WOLF_OF_WALLSTREET_DIRECTOR;
DROP ROLE WOLF_OF_WALLSTREET_READ;
DROP ROLE WOLF_OF_WALLSTREET_READ_AND_WRITE;
//=============================================================================